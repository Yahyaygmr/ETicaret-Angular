{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\YAHYA\\\\Desktop\\\\GY\\\\ETicaret\\\\ETicaretClient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../http-client.service\";\nexport class ProductService {\n  constructor(httpClientService) {\n    this.httpClientService = httpClientService;\n  }\n\n  create(product, successCallBack, errorCallBack) {\n    this.httpClientService.post({\n      controller: \"products\"\n    }, product).subscribe(result => {\n      successCallBack();\n    }, errorResponse => {\n      const _error = errorResponse.error;\n      let message = \"\";\n\n      _error.forEach((v, index) => {\n        v.value.forEach((_v, _index) => {\n          message += `${_v}<br>`;\n        });\n      });\n\n      errorCallBack(message);\n    });\n  }\n\n  read(page = 0, size = 5, successCallBack, errorCallBack) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const promiseData = _this.httpClientService.get({\n        controller: 'products',\n        queryString: `page=${page}&size=${size}`\n      }).toPromise();\n\n      promiseData.then(d => successCallBack()).catch(errorResponse => errorCallBack(errorResponse.message));\n      return yield promiseData;\n    })();\n  }\n\n  delete(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const deleteObservable = _this2.httpClientService.delete({\n        controller: \"products\"\n      }, id);\n\n      yield firstValueFrom(deleteObservable);\n    })();\n  }\n\n}\n\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClientService));\n};\n\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/YAHYA/Desktop/GY/ETicaret/ETicaretClient/src/app/services/common/models/product.service.ts"],"names":["firstValueFrom","i0","i1","ProductService","constructor","httpClientService","create","product","successCallBack","errorCallBack","post","controller","subscribe","result","errorResponse","_error","error","message","forEach","v","index","value","_v","_index","read","page","size","promiseData","get","queryString","toPromise","then","d","catch","delete","id","deleteObservable","ɵfac","ProductService_Factory","t","ɵɵinject","HttpClientService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,cAAT,QAA+B,MAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,iBAAD,EAAoB;AAC3B,SAAKA,iBAAL,GAAyBA,iBAAzB;AACH;;AACDC,EAAAA,MAAM,CAACC,OAAD,EAAUC,eAAV,EAA2BC,aAA3B,EAA0C;AAC5C,SAAKJ,iBAAL,CAAuBK,IAAvB,CAA4B;AACxBC,MAAAA,UAAU,EAAE;AADY,KAA5B,EAEGJ,OAFH,EAGKK,SAHL,CAGeC,MAAM,IAAI;AACrBL,MAAAA,eAAe;AAClB,KALD,EAKIM,aAAD,IAAmB;AAClB,YAAMC,MAAM,GAAGD,aAAa,CAACE,KAA7B;AACA,UAAIC,OAAO,GAAG,EAAd;;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAe,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzBD,QAAAA,CAAC,CAACE,KAAF,CAAQH,OAAR,CAAgB,CAACI,EAAD,EAAKC,MAAL,KAAgB;AAC5BN,UAAAA,OAAO,IAAK,GAAEK,EAAG,MAAjB;AACH,SAFD;AAGH,OAJD;;AAKAb,MAAAA,aAAa,CAACQ,OAAD,CAAb;AACH,KAdD;AAeH;;AACKO,EAAAA,IAAI,CAACC,IAAI,GAAG,CAAR,EAAWC,IAAI,GAAG,CAAlB,EAAqBlB,eAArB,EAAsCC,aAAtC,EAAqD;AAAA;;AAAA;AAC3D,YAAMkB,WAAW,GAAG,KAAI,CAACtB,iBAAL,CAAuBuB,GAAvB,CAA2B;AAC3CjB,QAAAA,UAAU,EAAE,UAD+B;AAE3CkB,QAAAA,WAAW,EAAG,QAAOJ,IAAK,SAAQC,IAAK;AAFI,OAA3B,EAGjBI,SAHiB,EAApB;;AAIAH,MAAAA,WAAW,CAACI,IAAZ,CAAiBC,CAAC,IAAIxB,eAAe,EAArC,EACKyB,KADL,CACYnB,aAAD,IAAmBL,aAAa,CAACK,aAAa,CAACG,OAAf,CAD3C;AAEA,mBAAaU,WAAb;AAP2D;AAQ9D;;AACKO,EAAAA,MAAM,CAACC,EAAD,EAAK;AAAA;;AAAA;AACb,YAAMC,gBAAgB,GAAG,MAAI,CAAC/B,iBAAL,CAAuB6B,MAAvB,CAA8B;AACnDvB,QAAAA,UAAU,EAAE;AADuC,OAA9B,EAEtBwB,EAFsB,CAAzB;;AAGA,YAAMnC,cAAc,CAACoC,gBAAD,CAApB;AAJa;AAKhB;;AAnCuB;;AAqC5BjC,cAAc,CAACkC,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIpC,cAAV,EAA0BF,EAAE,CAACuC,QAAH,CAAYtC,EAAE,CAACuC,iBAAf,CAA1B,CAAP;AAAsE,CAAjI;;AACAtC,cAAc,CAACuC,KAAf,GAAuB,aAAczC,EAAE,CAAC0C,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzC,cAAT;AAAyB0C,EAAAA,OAAO,EAAE1C,cAAc,CAACkC,IAAjD;AAAuDS,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { firstValueFrom } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../http-client.service\";\r\nexport class ProductService {\r\n    constructor(httpClientService) {\r\n        this.httpClientService = httpClientService;\r\n    }\r\n    create(product, successCallBack, errorCallBack) {\r\n        this.httpClientService.post({\r\n            controller: \"products\"\r\n        }, product)\r\n            .subscribe(result => {\r\n            successCallBack();\r\n        }, (errorResponse) => {\r\n            const _error = errorResponse.error;\r\n            let message = \"\";\r\n            _error.forEach((v, index) => {\r\n                v.value.forEach((_v, _index) => {\r\n                    message += `${_v}<br>`;\r\n                });\r\n            });\r\n            errorCallBack(message);\r\n        });\r\n    }\r\n    async read(page = 0, size = 5, successCallBack, errorCallBack) {\r\n        const promiseData = this.httpClientService.get({\r\n            controller: 'products',\r\n            queryString: `page=${page}&size=${size}`\r\n        }).toPromise();\r\n        promiseData.then(d => successCallBack())\r\n            .catch((errorResponse) => errorCallBack(errorResponse.message));\r\n        return await promiseData;\r\n    }\r\n    async delete(id) {\r\n        const deleteObservable = this.httpClientService.delete({\r\n            controller: \"products\"\r\n        }, id);\r\n        await firstValueFrom(deleteObservable);\r\n    }\r\n}\r\nProductService.ɵfac = function ProductService_Factory(t) { return new (t || ProductService)(i0.ɵɵinject(i1.HttpClientService)); };\r\nProductService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ProductService, factory: ProductService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}